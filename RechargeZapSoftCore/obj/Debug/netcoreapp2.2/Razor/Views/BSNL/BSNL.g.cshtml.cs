#pragma checksum "D:\Personal\RechargeZap\RechargeZapSoftCoreNewDesignAll\RechargeZapSoftCore\Views\BSNL\BSNL.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5863ae850612d489629b25ef27c409ded98aa067"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_BSNL_BSNL), @"mvc.1.0.view", @"/Views/BSNL/BSNL.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/BSNL/BSNL.cshtml", typeof(AspNetCore.Views_BSNL_BSNL))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\Personal\RechargeZap\RechargeZapSoftCoreNewDesignAll\RechargeZapSoftCore\Views\_ViewImports.cshtml"
using RechargeZapSoftCore;

#line default
#line hidden
#line 2 "D:\Personal\RechargeZap\RechargeZapSoftCoreNewDesignAll\RechargeZapSoftCore\Views\_ViewImports.cshtml"
using RechargeZapSoftCore.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5863ae850612d489629b25ef27c409ded98aa067", @"/Views/BSNL/BSNL.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9dc49c793ec8447a5b30706b5d497612b205f7f4", @"/Views/_ViewImports.cshtml")]
    public class Views_BSNL_BSNL : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/preloader.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("/Home/PayUMoneyPayment"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/logo-white.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("height:40px; "), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "D:\Personal\RechargeZap\RechargeZapSoftCoreNewDesignAll\RechargeZapSoftCore\Views\BSNL\BSNL.cshtml"
  
    ViewData["Title"] = "BSNL Mobile Recharge Online - Prepaid Recharge on RechargeZap";
    Layout = "~/Views/Shared/ShareLayoutNew.cshtml";

#line default
#line hidden
            DefineSection("header", async() => {
                BeginContext(175, 1483, true);
                WriteLiteral(@"
    <style>


        .newnumbertype {
            border: none;
            width: 100%;
        }

        input:focus, textarea:focus, select:focus {
            outline: none;
        }

        newnumbertype::-webkit-inner-spin-button,
        newnumbertype::-webkit-outer-spin-button {
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
        }

        input[type=number]::-webkit-inner-spin-button,
        input[type=number]::-webkit-outer-spin-button {
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
        }

        input::-webkit-outer-spin-button,
        input::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        /* Firefox */
        input[type=number] {
            -moz-appearance: textfield;
        }

        .btnsubmit {
            background: #172c64;
            /*background: linear-gradie");
                WriteLiteral(@"nt(90deg, #10182b 0%, #172c65 100%);*/
            border-radius: 5px;
            border: none;
            color: #fff;
            font-size: 15px;
            font-weight: 400;
            padding: 10px 30px;
            letter-spacing: 0.7px;
            cursor: pointer;
            height: 45px;
            width: 100%;
        }

        .agreeterms {
            font-size: 13px;
            color: #757272;
        }
    </style>
");
                EndContext();
            }
            );
            BeginContext(1661, 94, true);
            WriteLiteral("\r\n<div class=\"loader\" id=\"AjaxLoader\" style=\"display:none;\">\r\n    <div class=\"strip-holder\">\r\n");
            EndContext();
            BeginContext(1878, 8, true);
            WriteLiteral("        ");
            EndContext();
            BeginContext(1886, 36, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "5863ae850612d489629b25ef27c409ded98aa0677946", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1922, 510, true);
            WriteLiteral(@"
    </div>
</div>

<section class=""main-banner-landing"" id=""recharge"">
    <div class=""container-fluid"">
        <div class=""landing-page"">
            <div class=""row d-flex justify-content-center"">
                <div class=""col-lg-4 col-md-7 col-sm-12"">

                    <div class=""form-area-box landing-page-form"">
                        <div class=""landing-title text-center"">
                            <h1>BSNL Recharge</h1>
                        </div>
                        ");
            EndContext();
            BeginContext(2432, 3591, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5863ae850612d489629b25ef27c409ded98aa0679643", async() => {
                BeginContext(2438, 1640, true);
                WriteLiteral(@"


                            <div class=""form-area landing-radio"">
                                <!-- <label class=""label-title"">Select</label> -->
                                <div class=""div-radio"">
                                    <input type=""radio"" class=""custom-control-input"" id=""customRadioPrepaid"" name=""example"" value=""Postpaid"" checked onchange=""loadmobileoperator('1');"">
                                    <label class=""custom-control-label small-size fw-500 text-grey-900 font-xsss"" for=""customRadioPrepaid"">Prepaid</label>

                                </div>
                                <div class=""div-radio"">
                                    <input type=""radio"" class=""custom-control-input"" id=""customRadioPostpaid"" name=""example"" value=""Prepaid"" onchange=""loadmobileoperator('6');"">
                                    <label class=""custom-control-label small-size fw-500 text-grey-900 font-xsss"" for=""customRadioPostpaid"">Postpaid</label>

                             ");
                WriteLiteral(@"   </div>
                            </div>

                            <div class=""form-area"">
                                <!-- <label class=""label-title"">Mobile Number*</label> -->
                                <span>+91</span>
                                <input type=""number"" id=""mobileNumber"" maxlength=""10"" onkeypress=""return isNumber(event)"" class=""newnumbertype"" name="""" placeholder=""Enter 10 Digit Mobile No"" />
                            </div>

                            <div class=""form-area"">
                                <!-- <label class=""label-title"">Operator</label> -->
");
                EndContext();
                BeginContext(4374, 246, true);
                WriteLiteral("                                <select id=\"ddoperatormobile\"></select>\r\n                            </div>\r\n                            <div class=\"form-area\">\r\n                                <!-- <label class=\"label-title\">Circle</label> -->\r\n");
                EndContext();
                BeginContext(4914, 725, true);
                WriteLiteral(@"                                <select id=""ddcircle""></select>
                            </div>
                            <div class=""form-area"">
                                <!-- <label class=""label-title"">Mobile Number*</label> -->
                                <span><i class=""fa-solid fa-indian-rupee-sign""></i></span>
                                <input type=""number"" id=""mobileAmount"" onkeypress=""return isNumber(event)"" class=""newnumbertype"" name="""" placeholder=""Amount"" />
                                <a onclick=""loadPlan();"" class=""check-plan"" id=""btncheckplan"" style=""color:white"">Check Plan</a>
                            </div>

                            <div class=""form-area-btn"">
");
                EndContext();
                BeginContext(5789, 227, true);
                WriteLiteral("                                <input type=\"button\" value=\"Proceed to Recharge\" id=\"btnrecharge\" class=\"btnsubmit\" onclick=\"return  validateMobileRecharge2();\" />\r\n\r\n                            </div>\r\n                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(6023, 1569, true);
            WriteLiteral(@"
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


<section class=""main-banner-landing"" id=""userdetail"" style=""display:none;"">
    <div class=""container-fluid"">
        <div class=""landing-page"">
            <div class=""row d-flex justify-content-center"">
                <div class=""col-lg-4 col-md-7 col-sm-12"">

                    <div class=""form-area-box landing-page-form"">
                        <!-- <div class=""landing-login"">
                            <h1>0000000000</h1>
                            <span><i class=""fa-solid fa-indian-rupee-sign""></i> 2000</span>
                        </div> -->

                        <div class=""head-change-area landing-login"">
                            <ul>
                                <li>
                                    <a onclick=""backuserdetail();"" style=""color:white"" class=""back-plan""><i class=""fa-solid fa-chevron-left""></i></a>
                                </li>");
            WriteLiteral(@"
                                <li><span class=""plan-num"" id=""headeruserdetail""></span></li>
                                <li>
                                    <span class=""landing-price"">
                                        <i class=""fa-solid fa-indian-rupee-sign""></i>
                                        <span id=""headeruserdetailamount""></span>
                                    </span>
                                </li>
                            </ul>
                        </div>
                        ");
            EndContext();
            BeginContext(7592, 2264, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5863ae850612d489629b25ef27c409ded98aa06716073", async() => {
                BeginContext(7644, 1076, true);
                WriteLiteral(@"

                            <div class=""form-area"">
                                <input type=""text"" name=""UserName"" placeholder=""Name"" id=""nameuserdetail"" class=""w-100"" />
                            </div>
                            <div class=""form-area"">
                                <input type=""email"" name=""Email"" placeholder=""Email"" id=""emailuserdetail"" />
                                <input type=""hidden"" class=""form-control mb-3"" id=""mobileuserdetail"" placeholder=""Name"" name=""UserMobile"">
                                <input type=""hidden"" class=""form-control  border-2 bg-color-none text-grey-700"" id=""operatoridConfirmuserdetail"" value=""Amount"" name=""OperatorCode"">

                                <input type=""hidden"" class=""form-control  inputconfirm"" id=""amountConfirmuserdetail"" name=""RechargeAmount"">
                                <input type=""hidden"" class=""form-control  inputconfirm"" id=""mobileConfirmuserdetail"" name=""RechargeMobile"">
                            </div>
  ");
                WriteLiteral("                          <div class=\"form-agree\">\r\n");
                EndContext();
                BeginContext(9097, 115, true);
                WriteLiteral("                                <input type=\"checkbox\" checked id=\"agreecheck\" />\r\n                                ");
                EndContext();
                BeginContext(9213, 147, false);
#line 195 "D:\Personal\RechargeZap\RechargeZapSoftCoreNewDesignAll\RechargeZapSoftCore\Views\BSNL\BSNL.cshtml"
                           Write(Html.ActionLink("I Agree all Terms & Conditions and processing fees applicable on recharge.", "Terms", "Home", null, new { @class = "agreeterms" }));

#line default
#line hidden
                EndContext();
                BeginContext(9360, 113, true);
                WriteLiteral("\r\n                            </div>\r\n                            <div class=\"form-area-btn landing-btn-login\">\r\n");
                EndContext();
                BeginContext(9535, 314, true);
                WriteLiteral(@"                                <input type=""submit"" class=""btnsubmit"" name=""btnPay"" style=""color:white !important; background-color:#081844;border-color:#081844 ;   padding: 8px 20px;"" onclick=""return  validateRechargeconfirm2();"" value=""Pay Now"" />

                            </div>
                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9856, 1117, true);
            WriteLiteral(@"
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


<section class=""main-banner-landing"" id=""plan"" style=""display:none;"">
    <div class=""container"">
        <div class=""landing-page"">
            <div class=""row d-flex justify-content-center"">
                <div class=""col-lg-12 col-md-12 col-sm-12"">
                    <div class=""check-plan-box"">
                        <div class=""head-change-area"">
                            <ul>
                                <li>
                                    <a onclick=""backuserdetail();"" style=""color:white;"" class=""back-plan""><i class=""fa-solid fa-chevron-left""></i></a>
                                </li>
                                <li><span class=""plan-num"" id=""headerplan""></span></li>
                                <li><a onclick=""backuserdetail();"" style=""color:white;"" class=""change-plan"">Change</a></li>
                            </ul>
                        </div>");
            WriteLiteral("\r\n                        <ul class=\"nav nav-tabs plan-tabs\" role=\"tablist\" id=\"tabheader\">\r\n");
            EndContext();
            BeginContext(13112, 111, true);
            WriteLiteral("                        </ul>\r\n                        <div class=\"tab-content plan-content\" id=\"tabcontent\">\r\n");
            EndContext();
            BeginContext(19445, 148, true);
            WriteLiteral("                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(19616, 723, true);
                WriteLiteral(@"
    <div class=""modal bottom fade"" id=""ModalConfirm2"" tabindex=""-1"" role=""dialog"">
        <div class=""modal-dialog modal-dialog-centered modal-lg"" role=""document"">
            <div class=""modal-content border-0"">
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close""><i class=""ti-close text-grey-500""></i></button>
                <div class=""modal-body   bg-none"">
                    <div class=""row"">
                        <div class=""col-md-6"" style=""background-color:#192E6A;padding-top:20px; padding-bottom:20px;"">
                            <div class=""row"">
                                <div class=""col-md-12 text-center"">
                                    ");
                EndContext();
                BeginContext(20339, 59, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "5863ae850612d489629b25ef27c409ded98aa06722916", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(20398, 1413, true);
                WriteLiteral(@"
                                </div>
                                <div class=""col-md-12 "">
                                    <label style=""color:white;"">Email</label>
                                    <input type=""text"" class=""form-control   inputconfirm"" id=""emailConfirm"">
                                </div>
                                <div class=""col-md-12 "">
                                    <label style=""color:white;"">Name</label>
                                    <input type=""text"" class=""form-control  inputconfirm"" id=""nameConfirm"">
                                </div>
                                <div class=""col-md-12 "">
                                    <label style=""color:white;"">Mobile</label>
                                    <input type=""text"" class=""form-control  inputconfirm"" id=""customermobileConfirm"">
                                </div>
                            </div>
                        </div>
                        <div class=""col-md-6");
                WriteLiteral(@""" style=""padding-top:20px; padding-bottom:20px;  "">
                            <div class=""card shadow-none rounded-0  border-0"">
                                <div class=""card-body rounded-0 text-left pt-0 pb-2"">
                                    <h5 class=""fw-600 display2-size mb-4"" style=""  font-size: 25px !important"">Mobile Recharge</h5>
                                    ");
                EndContext();
                BeginContext(21811, 1893, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5863ae850612d489629b25ef27c409ded98aa06725741", async() => {
                    BeginContext(21841, 1856, true);
                    WriteLiteral(@"

                                        <div class=""form-group icon-tab  mb-1"">
                                            <input type=""text"" class=""form-control  border-2 bg-color-none text-grey-700"" id=""amountConfirm"" value=""Amount"">
                                            <i class=""ti-money text-grey-700 pr-0""></i>
                                        </div>
                                        <div class=""form-group icon-tab mb-1"">
                                            <input type=""text"" class=""form-control  border-2 bg-color-none text-grey-700"" id=""operatorConfirm"" value=""Operator"">
                                            <i class=""ti-map text-grey-700 pr-0""></i>
                                        </div>
                                        <div class=""form-group icon-tab mb-1"">
                                            <input type=""text"" class=""form-control  border-2 bg-color-none text-grey-700"" id=""circleConfirm"" value=""Circle"">
                             ");
                    WriteLiteral(@"               <i class=""fa fa-map-marker text-grey-700 pr-0""></i>
                                        </div>
                                        <div class=""form-group icon-tab mb-1"">
                                            <input type=""text"" class=""form-control  border-2 bg-color-none text-grey-700"" id=""mobileConfirm"" value=""Mobile"">
                                            <i class=""ti-mobile text-grey-700 pr-0""></i>
                                        </div>
                                        <div class=""form-check text-left mb-3"">

                                            <a href=""#"" class=""fw-600 font-xsss text-grey-700 mt-1 float-right btn btn-success"" style=""color:white !important;"">Pay Now</a>
                                        </div>
                                    ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(23704, 4075, true);
                WriteLiteral(@"



                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script type=""text/javascript"">
        function validateMobileRecharge2() {

            if (document.getElementById(""mobileNumber"").value == """") {
                toastr.warning('Warning', 'Enter Number');
                document.getElementById(""mobileNumber"").focus();
                return false;
            }
            else if (document.getElementById(""mobileNumber"").value.length != 10) {
                toastr.warning('Warning', 'Enter Valid Number');
                document.getElementById(""mobileNumber"").focus();
                return false;
            }
            else if ($('#ddoperatormobile').find("":selected"").val() == ""0"") {
                toastr.warning('Warning', 'Select Operator');
                document.getElementById(""ddoperatormobile"").focus();
   ");
                WriteLiteral(@"             return false;
            }
            else if ($('#ddcircle').find("":selected"").val() == ""0"") {
                toastr.warning('Warning', 'Select Circle');
                document.getElementById(""ddcircle"").focus();
                return false;
            }
            else if (document.getElementById(""mobileAmount"").value == """") {
                //toastr.warning('Warning', 'Enter Amount');
                //document.getElementById(""mobileAmount"").focus();
                loadPlan();
            }
            else {



                document.getElementById(""amountConfirm"").value = document.getElementById(""mobileAmount"").value;
                document.getElementById(""operatorConfirm"").value = $('#ddoperatormobile').find("":selected"").text();
                document.getElementById(""mobileConfirm"").value = document.getElementById(""mobileNumber"").value;
                document.getElementById(""circleConfirm"").value = $('#ddcircle').find("":selected"").text();
              ");
                WriteLiteral(@"  document.getElementById(""customermobileConfirm"").value = document.getElementById(""mobileNumber"").value;


                document.getElementById(""amountConfirmuserdetail"").value = document.getElementById(""mobileAmount"").value;
                document.getElementById(""operatoridConfirmuserdetail"").value = $('#ddoperatormobile').find("":selected"").val();
                document.getElementById(""mobileConfirmuserdetail"").value = document.getElementById(""mobileNumber"").value;

                document.getElementById(""mobileuserdetail"").value = document.getElementById(""mobileNumber"").value;
                document.getElementById(""headeruserdetail"").innerHTML = document.getElementById(""mobileNumber"").value + ' - <i class=""fa fa-inr""></i>' + document.getElementById(""mobileAmount"").value

                document.getElementById('recharge').style.display = 'none';
                document.getElementById('userdetail').style.display = 'block';
                document.getElementById('plan').style.display ");
                WriteLiteral(@"= 'none';
                //showModal2();
            }
        }
        function validateRechargeconfirm2() {
            if (document.getElementById(""emailuserdetail"").value == """") {
                toastr.warning('Warning', 'Enter Email');
                document.getElementById(""emailuserdetail"").focus();
                return false;
            }
            else if (document.getElementById(""nameuserdetail"").value == """") {
                toastr.warning('Warning', 'Enter Name');
                document.getElementById(""nameuserdetail"").focus();
                return false;
            }
            if (document.getElementById('agreecheck').checked) {
                //alert(""checked"");
            } else {
                toastr.warning('Warning', 'Please Accept Terms and Conditions');
                return false;
                //document.getElementById(""nameuserdetail"").focus();
            }
            var validRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+");
                EndContext();
                BeginContext(27780, 13361, true);
                WriteLiteral(@"@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/;
            if (document.getElementById(""emailuserdetail"").value.match(validRegex)) {
                //alert(""Valid email address!"");
                //document.form1.text1.focus();
                //document.getElementById(""emailuserdetail"").focus();
                //return true;
            } else {
                //alert(""Invalid email address!"");
                //document.form1.text1.focus();
                toastr.warning('Warning', 'Enter Valid Email');
                document.getElementById(""emailuserdetail"").focus();
                return false;
            }
        }
        function backuserdetail() {
            document.getElementById('recharge').style.display = 'block';
            document.getElementById('userdetail').style.display = 'none';
            document.getElementById('plan').style.display = 'none';
        }
        function showModal2() {
            $('#ModalConfirm2').modal({ backdrop: 'static', keyboard: false })
   ");
                WriteLiteral(@"     }
        function Closepopup2() {
            $('#ModalConfirm2').modal('hide');
            $('body').removeClass('modal-open');
            $('body').css('padding-right', '0');
            $('.modal-backdrop').remove();
        }
    </script>
    <script>

        $(document).ready(function () {

            var isChecked = $('#customRadioPrepaid').prop('checked');
            if (isChecked) {
                loadmobileoperator('1');
            }
            else {
                loadmobileoperator('6');
            }

            loadCircle();
        });

        function loadmobileoperator(value) {
            $('#ddoperatormobile').empty();
            if (value == '1') {
                document.getElementById('btncheckplan').style.display = 'block';
                document.getElementById('btnrecharge').value = 'Proceed To Recharge';

                loadPrepaidOperator();
            }
            else {
                document.getElementById('btncheckplan').");
                WriteLiteral(@"style.display = 'none';
                document.getElementById('btnrecharge').value = 'Proceed To Pay Bill';
                loadPostpaidOperator();
            }
        }

        function loadPrepaidOperator() {
            $.ajax({

                url: '/api/Recharge/getOperatorPrepaid',
                //data: ""{ 'Amount': '"" + depositeAmt  + ""','userid': '"" + '<%=Session[""UserId""] %>'  + ""','FromWalletAddress': '"" + wallet_address  + ""','ToWalletAddress': '"" + contract_addr  + ""','ReferenceId': '"" + result  + ""'}"",
                data: """",
                dataType: ""json"",
                type: 'GET',
                contentType: ""application/json; charset=utf-8"",

                success: function (result) {
                    //alert(result);
                    //console.log(result.d);
                    $('#ddoperatormobile').empty();

                    $('#ddoperatormobile').append('<option value=""0"">Select Operator</option>');
                    $.each(result, functio");
                WriteLiteral(@"n (result, value) {

                        $(""#ddoperatormobile"").append($(""<option></option>"").val(value.id).html(value.operator));
                    })
                    $(""#ddoperatormobile"").val('7');
                    //toastr.success('Success', result.d);

                },
                beforeSend: function () {
                                                                                                    /*$(""#ddoperatormobile"").html('Loading...')*/;
                    $('#ddoperatormobile').empty().append('<option>Loading...</option>');
                },
                complete: function () {
                    // Code to hide spinner.
                }
            })
        }

        function loadPostpaidOperator() {
            $.ajax({

                url: '/api/Recharge/getOperatorPostPaid',
                //data: ""{ 'Amount': '"" + depositeAmt  + ""','userid': '"" + '<%=Session[""UserId""] %>'  + ""','FromWalletAddress': '"" + wallet_address  + ""','ToWallet");
                WriteLiteral(@"Address': '"" + contract_addr  + ""','ReferenceId': '"" + result  + ""'}"",
                data: """",
                dataType: ""json"",
                type: 'GET',
                contentType: ""application/json; charset=utf-8"",

                success: function (result) {
                    //alert(result);
                    //console.log(result.d);
                    $('#ddoperatormobile').empty();

                    $('#ddoperatormobile').append('<option value=""0"">Select Operator</option>');
                    $.each(result, function (result, value) {

                        $(""#ddoperatormobile"").append($(""<option></option>"").val(value.id).html(value.operator));
                    })
                    //toastr.success('Success', result.d);

                },
                beforeSend: function () {
                                                                                                    /*$(""#ddoperatormobile"").html('Loading...')*/;
                    $('#ddoperato");
                WriteLiteral(@"rmobile').empty().append('<option>Loading...</option>');
                },
                complete: function () {
                    // Code to hide spinner.
                }
            })
        }

        function loadCircle() {
            $.ajax({

                url: '/api/Recharge/getCircle',
                //data: ""{ 'Amount': '"" + depositeAmt  + ""','userid': '"" + '<%=Session[""UserId""] %>'  + ""','FromWalletAddress': '"" + wallet_address  + ""','ToWalletAddress': '"" + contract_addr  + ""','ReferenceId': '"" + result  + ""'}"",
                data: """",
                dataType: ""json"",
                type: 'GET',
                contentType: ""application/json; charset=utf-8"",

                success: function (result) {
                    //alert(result);
                    //console.log(result);
                    $('#ddcircle').empty();

                    $('#ddcircle').append('<option value=""0"">Select Circle</option>');
                    var items = """";
           ");
                WriteLiteral(@"         $.each(result, function (result, value) {
                        //alert(value);
                        //console.log(value.circlecode);
                        $(""#ddcircle"").append($(""<option></option>"").val(value.circleCode).html(value.circleName));
                        //items += ""<option>"" + value.circleCode + ""</option>"";
                    });

                    //$(""#ddcircle"").append(items);
                    //toastr.success('Success', result.d);

                },
                beforeSend: function () {
                                                                                                    /*$(""#ddoperatormobile"").html('Loading...')*/;
                    $('#ddcircle').empty().append('<option>Loading...</option>');
                },
                complete: function () {
                    // Code to hide spinner.
                }
            })
        }

        function loadPlan() {

            if (document.getElementById(""mobileNumb");
                WriteLiteral(@"er"").value == """") {
                toastr.warning('Warning', 'Enter Number');
                document.getElementById(""mobileNumber"").focus();
                return false;
            }
            else {

                var jsondata = { 'operatorId': $('#ddoperatormobile').find("":selected"").val(), 'circleId': $('#ddcircle').find("":selected"").val() };
                //alert(jsondata);
                $.ajax({

                    url: '/api/Recharge/getPlan2',
                    data: JSON.stringify(jsondata),

                    dataType: ""json"",
                    type: 'POST',
                    contentType: ""application/json; charset=utf-8"",

                    success: function (result) {
                        //alert(result[2]);
                        console.log(result[0]);
                        console.log(result[1]);
                        console.log(result[2]);
                        console.log(result[3]);

                        document.getElementById(""t");
                WriteLiteral(@"abheader"").innerHTML = result[0];
                        document.getElementById(""tabcontent"").innerHTML = result[1];
                        //showModalplan();
                        document.getElementById('recharge').style.display = 'none';
                        document.getElementById('userdetail').style.display = 'none';
                        document.getElementById('plan').style.display = 'block';
                        document.getElementById(""headerplan"").innerHTML = document.getElementById(""mobileNumber"").value;
                        document.getElementById('headerplan').focus();
                        $('#headerplan')[0].scrollIntoView();
                    },
                    beforeSend: function () {
                                                                                                                /*$(""#ddoperatormobile"").html('Loading...')*/;
                        $('#AjaxLoader').show();
                    },
                    complete: function () {");
                WriteLiteral(@"
                        $('#AjaxLoader').hide();
                    }
                })

            }
        }
        const source = document.getElementById('mobileNumber');
        //const result = document.getElementById('result');

        const inputHandler = function (e) {
            var number = e.target.value;
            //alert('a');
            //console.log(number);
            showOperatorcheck();
        }

        source.addEventListener('input', inputHandler);
        source.addEventListener('propertychange', inputHandler); // for IE8

        function showOperatorcheck() {


            if (document.getElementById(""mobileNumber"").value != """") {
                if (document.getElementById(""mobileNumber"").value.length == 10) {
                    var jsondata = { 'number': document.getElementById(""mobileNumber"").value };
                    //alert(jsondata);
                    $.ajax({

                        url: '/api/Recharge/getOperatorcheck',
        ");
                WriteLiteral(@"                data: JSON.stringify(jsondata),

                        dataType: ""json"",
                        type: 'POST',
                        contentType: ""application/json; charset=utf-8"",

                        success: function (result) {
                            //alert(result);
                            //console.log(result[0]);
                            //console.log(result[1]);
                            console.log(result[2]);
                            console.log(result[3]);
                            //console.log(result.str_tabheader);
                            $(""#ddoperatormobile"").val(result[0]);
                            $(""#ddcircle"").val(result[1]);
                            //document.getElementById(""dthcustomername"").innerHTML = result[0];
                            //document.getElementById(""dthmonthlyplan"").innerHTML = result[1];

                            //showModalDTHInfo();

                        },
                        before");
                WriteLiteral(@"Send: function () {
                                                                                                        /*$(""#ddoperatormobile"").html('Loading...')*/;
                            $('#AjaxLoader').show();
                        },
                        complete: function () {
                            $('#AjaxLoader').hide();
                        }
                    })
                }
            }
        }
        function selectplanmobile(amount) {
            var planamount = parseInt(amount);
            document.getElementById(""mobileAmount"").value = planamount;
            document.getElementById('recharge').style.display = 'none';
            document.getElementById('userdetail').style.display = 'block';
            document.getElementById('plan').style.display = 'none';

            document.getElementById(""headeruserdetail"").innerHTML = document.getElementById(""mobileNumber"").value + ' - <i class=""fa fa-inr""></i>' + document.getElementById(""mobileAmou");
                WriteLiteral(@"nt"").value


            document.getElementById(""amountConfirm"").value = document.getElementById(""mobileAmount"").value;
            document.getElementById(""operatorConfirm"").value = $('#ddoperatormobile').find("":selected"").text();
            document.getElementById(""mobileConfirm"").value = document.getElementById(""mobileNumber"").value;
            document.getElementById(""circleConfirm"").value = $('#ddcircle').find("":selected"").text();
            document.getElementById(""customermobileConfirm"").value = document.getElementById(""mobileNumber"").value;


            document.getElementById(""amountConfirmuserdetail"").value = document.getElementById(""mobileAmount"").value;
            document.getElementById(""operatoridConfirmuserdetail"").value = $('#ddoperatormobile').find("":selected"").val();
            document.getElementById(""mobileConfirmuserdetail"").value = document.getElementById(""mobileNumber"").value;

            document.getElementById(""mobileuserdetail"").value = document.getElementById(""");
                WriteLiteral("mobileNumber\").value;\r\n        }\r\n    </script>\r\n");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
