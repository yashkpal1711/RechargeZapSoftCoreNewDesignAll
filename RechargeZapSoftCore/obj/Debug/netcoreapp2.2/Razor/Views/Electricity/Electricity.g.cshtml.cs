#pragma checksum "D:\Personal\RechargeZap\RechargeZapSoftCoreNewDesignAll\RechargeZapSoftCore\Views\Electricity\Electricity.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5ed649d8ffca62745c022ecdcb2b0e71bae9f3a5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Electricity_Electricity), @"mvc.1.0.view", @"/Views/Electricity/Electricity.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Electricity/Electricity.cshtml", typeof(AspNetCore.Views_Electricity_Electricity))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\Personal\RechargeZap\RechargeZapSoftCoreNewDesignAll\RechargeZapSoftCore\Views\_ViewImports.cshtml"
using RechargeZapSoftCore;

#line default
#line hidden
#line 2 "D:\Personal\RechargeZap\RechargeZapSoftCoreNewDesignAll\RechargeZapSoftCore\Views\_ViewImports.cshtml"
using RechargeZapSoftCore.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5ed649d8ffca62745c022ecdcb2b0e71bae9f3a5", @"/Views/Electricity/Electricity.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9dc49c793ec8447a5b30706b5d497612b205f7f4", @"/Views/_ViewImports.cshtml")]
    public class Views_Electricity_Electricity : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/preloader.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("/Home/PayUMoneyPayment"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "D:\Personal\RechargeZap\RechargeZapSoftCoreNewDesignAll\RechargeZapSoftCore\Views\Electricity\Electricity.cshtml"
  
    ViewData["Title"] = "Electricity";
    Layout = "~/Views/Shared/ShareLayoutNew.cshtml";

#line default
#line hidden
            BeginContext(103, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
            DefineSection("header", async() => {
                BeginContext(129, 1479, true);
                WriteLiteral(@"
    <style>


        .newnumbertype {
            border: none;
            width: 100%;
        }

        input:focus, textarea:focus, select:focus {
            outline: none;
        }

        newnumbertype::-webkit-inner-spin-button,
        newnumbertype::-webkit-outer-spin-button {
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
        }

        input[type=number]::-webkit-inner-spin-button,
        input[type=number]::-webkit-outer-spin-button {
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
        }

        input::-webkit-outer-spin-button,
        input::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        /* Firefox */
        input[type=number] {
            -moz-appearance: textfield;
        }

        .btnsubmit {
            background: #172c64;
            /*background: linear-gradie");
                WriteLiteral(@"nt(90deg, #10182b 0%, #172c65 100%);*/
            border-radius: 5px;
            border: none;
            color: #fff;
            font-size: 15px;
            font-weight: 400;
            padding: 10px 30px;
            letter-spacing: 0.7px;
            cursor: pointer;
            height: 45px;
            width: 100%;
        }

        .agreeterms {
            font-size: 13px;
            color: #757272;
        }

        ");
                EndContext();
                BeginContext(1609, 148, true);
                WriteLiteral("@media (max-width: 414px) {\r\n            .main-banner-landing {\r\n                padding: 150px 0px 150px;\r\n            }\r\n        }\r\n    </style>\r\n");
                EndContext();
            }
            );
            BeginContext(1760, 94, true);
            WriteLiteral("\r\n<div class=\"loader\" id=\"AjaxLoader\" style=\"display:none;\">\r\n    <div class=\"strip-holder\">\r\n");
            EndContext();
            BeginContext(1977, 8, true);
            WriteLiteral("        ");
            EndContext();
            BeginContext(1985, 36, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "5ed649d8ffca62745c022ecdcb2b0e71bae9f3a57330", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2021, 547, true);
            WriteLiteral(@"
    </div>
</div>

<section class=""main-banner-landing"" id=""recharge"">
    <div class=""container-fluid"">
        <div class=""landing-page"">
            <div class=""row d-flex justify-content-center"">
                <div class=""col-lg-4 col-md-7 col-sm-12"">

                    <div class=""form-area-box landing-page-form"">
                        <div class=""landing-title text-center"">
                            <h3 style=""font-weight:bold;"">Electricity Bill Payment</h3>
                        </div>
                        ");
            EndContext();
            BeginContext(2568, 4249, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5ed649d8ffca62745c022ecdcb2b0e71bae9f3a59066", async() => {
                BeginContext(2574, 388, true);
                WriteLiteral(@"
                            <div class=""form-dth"">
                                <p>Select Circle</p>
                                <select id=""ddcircleelectricity"" class=""form-control""></select>
                            </div>
                            <div class=""form-dth"" id=""divoperator"" style=""display:none;"">
                                <p>Select Operator</p>
");
                EndContext();
                BeginContext(3082, 1863, true);
                WriteLiteral(@"                                <select class=""form-control"" id=""ddoperatorelectricity""></select>
                            </div>
                            <div class=""form-dth"" id=""divconsumerno"" style=""display:none;"">
                                <p id=""dthtext"">Consumer Number</p>
                                <input type=""text"" id=""vehicleNumber"" style=""text-transform:uppercase;margin-bottom:3px;""  autocomplete=""off"" class=""form-control"">

                            </div>
                            <div>
                                <label id=""lbldisplaynote"" style=""font-size:11px;color:#086b3b;margin-bottom:10px;"">  </label>
                            </div>
                            <input type=""hidden"" id=""optional1Type"" value="""">

                            <div class=""form-dth"" id=""divoptional1"" style=""display:none"">
                                <p id=""optional1text""></p>
                                <input type=""text"" id=""optional1"" style=""text-transform:upper");
                WriteLiteral(@"case"" autocomplete=""off"" placeholder="""" class=""form-control"">
                                <select id=""ddoptional1"" class=""form-control""></select>
                            </div>
                            <div id=""divAmount"" style=""display:none"">
                                <p style=""  margin-bottom: 8px;
  font-size: 13px;
  letter-spacing: 0.2px;
  color: #5b5b5b;
  line-height: 1.1;
"">Bill Amount</p>
                                <div class=""form-area"" id=""divAmount"">
                                    <!-- <label class=""label-title"">Mobile Number*</label> -->
                                    <span><i class=""fa-solid fa-indian-rupee-sign""></i></span>
                                    <input type=""number"" name="""" class=""newnumbertype"" id=""ElectricityAmount"" readonly placeholder=""Amount"" />

");
                EndContext();
                BeginContext(5046, 1764, true);
                WriteLiteral(@"                                </div>
                            </div>
                            <div id=""divminmaxvalue"" style=""display:none"">
                                <i class=""fa fa-indian-rupee-sign"" style=""font-size:11px;color:green""></i>     <label id=""lblminvalue"" style=""font-size:11px;color:green"">  0</label>-<i class=""fa fa-indian-rupee-sign"" style=""font-size:11px;color:green""></i>     <label id=""lblmaxvalue"" style=""font-size:11px;color:green"">  0</label>
                            </div>
                            <div id=""diverrormessage"" style=""display:none"">
                                <label id=""lblerror"" style=""color:darkred""> </label>
                            </div>
                            <div id=""divdetail"" class=""form-dth"" style=""display:none"">
                                <h6 class=""text-center text-black-50"">Bill Details</h6>

                                <label id=""lblname"" style=""font-size:12px;""> </label>
                                <br />");
                WriteLiteral(@"
                                <label id=""lblbilldate"" style=""font-size:12px;""> </label>
                                <br />
                                <label id=""lblduedate"" style=""font-size:12px;""> </label>
                            </div>
                            <div class=""form-area-btn"">
                                <input type=""button"" id=""btnrechargefetch"" class=""btnsubmit"" value=""Proceed to Pay Bill"" onclick=""return  validateFastagRechargeFetch();"" />

                                <input type=""button"" value=""Proceed to Pay Bill"" style=""display:none;"" id=""btnrecharge"" class=""btnsubmit"" onclick=""return  validateFastagRecharge();"" />

                            </div>
                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(6817, 1255, true);
            WriteLiteral(@"
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<section class=""main-banner-landing"" id=""userdetail"" style=""display:none;"">
    <div class=""container-fluid"">
        <div class=""landing-page"">
            <div class=""row d-flex justify-content-center"">
                <div class=""col-lg-4 col-md-7 col-sm-12"">

                    <div class=""form-area-box landing-page-form"">
                        <!-- <div class=""landing-login"">
                            <h1>0000000000</h1>
                            <span><i class=""fa-solid fa-indian-rupee-sign""></i> 2000</span>
                        </div> -->

                        <div class=""head-change-area landing-login"">
                            <ul>
                                <li>
                                    <a onclick=""backuserdetail();"" style=""color:white"" class=""back-plan""><i class=""fa-solid fa-chevron-left""></i></a>
                                </li>
 ");
            WriteLiteral("                               <li><span class=\"plan-num\" id=\"headeruserdetail\" style=\"text-transform:uppercase\"></span></li>\r\n                                <li>\r\n                                    <span class=\"landing-price\">\r\n");
            EndContext();
            BeginContext(8164, 258, true);
            WriteLiteral(@"                                        <span id=""headeruserdetailamount""></span>
                                    </span>
                                </li>
                            </ul>
                        </div>
                        ");
            EndContext();
            BeginContext(8422, 2752, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5ed649d8ffca62745c022ecdcb2b0e71bae9f3a516691", async() => {
                BeginContext(8474, 380, true);
                WriteLiteral(@"

                            <div class=""form-area"">
                                <input type=""text"" name=""UserName"" placeholder=""Name"" id=""nameuserdetail"" class=""w-100"" />
                            </div>
                            <div class=""form-area"">
                                <input type=""email"" name=""Email"" placeholder=""Email"" id=""emailuserdetail"" />
");
                EndContext();
                BeginContext(8999, 803, true);
                WriteLiteral(@"                                <input type=""hidden"" class=""form-control  border-2 bg-color-none text-grey-700"" id=""operatoridConfirmuserdetail"" value=""Amount"" name=""OperatorCode"">
                                <input type=""hidden"" id=""optional1Confirm"" value="""" name=""OptionalValue1"">

                                <input type=""hidden"" class=""form-control  inputconfirm"" id=""amountConfirmuserdetail"" name=""RechargeAmount"">
                                <input type=""hidden"" class=""form-control  inputconfirm"" id=""mobileConfirmuserdetail"" name=""RechargeMobile"">
                            </div>
                            <div class=""form-area"">
                                <input type=""number"" placeholder=""Mobile"" class=""newnumbertype"" id=""mobileuserdetail"" name=""UserMobile"" />
");
                EndContext();
                BeginContext(9948, 90, true);
                WriteLiteral("                            </div>\r\n                            <div class=\"form-agree\">\r\n");
                EndContext();
                BeginContext(10415, 115, true);
                WriteLiteral("                                <input type=\"checkbox\" checked id=\"agreecheck\" />\r\n                                ");
                EndContext();
                BeginContext(10531, 147, false);
#line 215 "D:\Personal\RechargeZap\RechargeZapSoftCoreNewDesignAll\RechargeZapSoftCore\Views\Electricity\Electricity.cshtml"
                           Write(Html.ActionLink("I Agree all Terms & Conditions and processing fees applicable on recharge.", "Terms", "Home", null, new { @class = "agreeterms" }));

#line default
#line hidden
                EndContext();
                BeginContext(10678, 113, true);
                WriteLiteral("\r\n                            </div>\r\n                            <div class=\"form-area-btn landing-btn-login\">\r\n");
                EndContext();
                BeginContext(10853, 314, true);
                WriteLiteral(@"                                <input type=""submit"" class=""btnsubmit"" name=""btnPay"" style=""color:white !important; background-color:#081844;border-color:#081844 ;   padding: 8px 20px;"" onclick=""return  validateRechargeconfirm2();"" value=""Pay Now"" />

                            </div>
                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(11174, 114, true);
            WriteLiteral("\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(11311, 16876, true);
                WriteLiteral(@"

    <script>
        $(document).ready(function () {
            loadCircle();

        });

        function loadCircle() {
            $.ajax({

                url: '/api/Recharge/getElectricityCircle',
                //data: ""{ 'Amount': '"" + depositeAmt  + ""','userid': '"" + '<%=Session[""UserId""] %>'  + ""','FromWalletAddress': '"" + wallet_address  + ""','ToWalletAddress': '"" + contract_addr  + ""','ReferenceId': '"" + result  + ""'}"",
                data: """",
                dataType: ""json"",
                type: 'GET',
                contentType: ""application/json; charset=utf-8"",

                success: function (result) {
                    //alert(result);
                    //console.log(result);
                    $('#ddcircleelectricity').empty();
                    $('#ddcircleelectricity').append('<option value=""0"">Select Circle</option>');
                    var items = """";
                    $.each(result, function (result, value) {
                        //a");
                WriteLiteral(@"lert(value);
                        //console.log(value.circlecode);
                        $(""#ddcircleelectricity"").append($(""<option></option>"").val(value.circleCode).html(value.circleName));
                        //items += ""<option>"" + value.circleCode + ""</option>"";
                    });

                    //$(""#ddcircle"").append(items);
                    //toastr.success('Success', result.d);

                },
                beforeSend: function () {
                                                                                                            /*$(""#ddoperatormobile"").html('Loading...')*/;
                    $('#ddcircleelectricity').empty().append('<option>Loading...</option>');
                },
                complete: function () {
                    // Code to hide spinner.
                }
            })
        }
        $(""#ddcircleelectricity"").change(function () {

            //alert($('#ddoperatordth').find("":selected"").val());
          ");
                WriteLiteral(@"  document.getElementById('divdetail').style.display = 'none';
            document.getElementById('diverrormessage').style.display = 'none';
            document.getElementById('lblname').innerHTML = '';
            document.getElementById('ElectricityAmount').value = '';
            document.getElementById('lblbilldate').innerHTML = '';
            document.getElementById('lblduedate').innerHTML = '';
            document.getElementById('divoperator').style.display = 'block';
            document.getElementById('divoptional1').style.display = 'none';
            document.getElementById('optional1text').innerHTML = '';

            document.getElementById('optional1').value = '';

            $('#ddoptional1').empty();
            document.getElementById('optional1Type').value = '';

            var cid = $('#ddcircleelectricity').find("":selected"").val();
            var jsondata = { 'operatorId': cid };
            //alert(jsondata);
            $.ajax({

                url: '/api/Recha");
                WriteLiteral(@"rge/getElectricityOperatorByCircle',
                data: JSON.stringify(jsondata),

                dataType: ""json"",
                type: 'POST',
                contentType: ""application/json; charset=utf-8"",

                success: function (result) {
                    //alert(result);
                    //console.log(result.d);
                    $('#ddoperatorelectricity').empty();
                    $('#ddoperatorelectricity').append('<option value=""0"">Select Operator</option>');
                    $.each(result, function (result, value) {

                        $(""#ddoperatorelectricity"").append($(""<option></option>"").val(value.id).html(value.displayName));
                    })
                    //toastr.success('Success', result.d);

                },
                beforeSend: function () {
                                                                                                    /*$(""#ddoperatormobile"").html('Loading...')*/;
                    $('#Aj");
                WriteLiteral(@"axLoader').show();
                },
                complete: function () {
                    $('#AjaxLoader').hide();
                }
            })

        });
        $(""#ddoperatorelectricity"").change(function () {

            document.getElementById('divconsumerno').style.display = 'block';
            document.getElementById('diverrormessage').style.display = 'none';
            document.getElementById('divdetail').style.display = 'none';
            document.getElementById('lblname').innerHTML = '';
            document.getElementById('ElectricityAmount').value = '';
            document.getElementById('lblbilldate').innerHTML = '';
            document.getElementById('lblduedate').innerHTML = '';
            document.getElementById('divoptional1').style.display = 'none';
            document.getElementById('optional1text').innerHTML = '';

            document.getElementById('optional1').value = '';
            $('#ddoptional1').empty();
            document.getElementByI");
                WriteLiteral(@"d('optional1Type').value = '';

            var cid = $('#ddoperatorelectricity').find("":selected"").val();
            var jsondata = { 'operatorId': cid };
            //alert(jsondata);
            $.ajax({

                url: '/api/Recharge/getOperatorDetail',
                data: JSON.stringify(jsondata),

                dataType: ""json"",
                type: 'POST',
                contentType: ""application/json; charset=utf-8"",

                success: function (result) {
                    //alert(result);
                    //console.log(result.d);

                    //toastr.success('Success', result.d);
                    document.getElementById('dthtext').innerHTML = result[0];
                    document.getElementById('lbldisplaynote').innerHTML = result[1];

                    if (result[2] != '') {

                        document.getElementById('divoptional1').style.display = 'block';
                        document.getElementById('optional1text').innerH");
                WriteLiteral(@"TML = result[2];

                        document.getElementById('optional1Type').value = result[6]
                        if (result[6] == 'textbox') {
                            document.getElementById('optional1').style.display = 'block';
                            document.getElementById('ddoptional1').style.display = 'none';
                        }
                        else if (result[6] == 'dropdown') {

                            var str = result[7];
                            var str_array = str.split(',');

                            $('#ddoptional1').empty();
                            $('#ddoptional1').append('<option value=""0"">Select ' + result[2] + '</option>');


                            for (var i = 0; i < str_array.length; i++) {
                                // Trim the excess whitespace.
                                str_array[i] = str_array[i].replace(/^\s*/, """").replace(/\s*$/, """");
                                //alert(str_array[i]);

           ");
                WriteLiteral(@"                     $(""#ddoptional1"").append($(""<option></option>"").val(str_array[i]).html(str_array[i]));

                                // Add additional code here, such as:

                            }

                            document.getElementById('optional1').style.display = 'none';
                            document.getElementById('ddoptional1').style.display = 'block';

                        }
                    }
                },
                beforeSend: function () {
                                                                                                    /*$(""#ddoperatormobile"").html('Loading...')*/;
                    $('#AjaxLoader').show();
                },
                complete: function () {
                    $('#AjaxLoader').hide();
                }
            })

        });
            function validateFastagRechargeFetch() {
          if (document.getElementById(""vehicleNumber"").value == """") {
              toastr.warning('War");
                WriteLiteral(@"ning', 'Enter Consumer Number');
              document.getElementById(""vehicleNumber"").focus();
              return false;
          }
          else if ($('#ddoperatorelectricity').find("":selected"").val() == ""0"") {
              toastr.warning('Warning', 'Select Operator');
              document.getElementById(""ddoperatorelectricity"").focus();
              return false;
          }
          else {
              var vehicleNumber = document.getElementById(""vehicleNumber"").value;
              var optional1 = '';

              if (document.getElementById('optional1Type').value == 'textbox') {
                  optional1 = document.getElementById(""optional1"").value;

              }
              else if (document.getElementById('optional1Type').value == 'dropdown') {
                  optional1 = $('#ddoptional1').find("":selected"").text();
              }
              else {
                  optional1 = '';
              }
              var operatorId = $('#ddoperatorelectricity'");
                WriteLiteral(@").find("":selected"").val();


              FetchDetails(vehicleNumber, operatorId, optional1);
          }
        }
        function FetchDetails(consumerno, operatorId, optional1) {

            //alert(consumerno);
            //alert(operatorId);
            var jsondata = { 'vehiclenumber': consumerno, 'operatorId': operatorId, 'optional1': optional1  };
            //alert(jsondata);
            $.ajax({

                url: '/api/Recharge/fetchDetailsElectricity',
                data: JSON.stringify(jsondata),

                dataType: ""json"",
                type: 'POST',
                contentType: ""application/json; charset=utf-8"",

                success: function (result) {
                    //alert(result[0]);
                    //console.log(result.username);
                    //console.log(result[0]);
                    //document.getElementById('userbalancetop').innerHTML = result[0];
                    if (result[0] == '2') {
                        //al");
                WriteLiteral(@"ert(result[0]);
                        document.getElementById('divAmount').style.display = 'block';
                        //document.getElementById('divminmaxvalue').style.display = 'block';
                        document.getElementById('btnrechargefetch').style.display = 'none';
                        document.getElementById('btnrecharge').style.display = 'block';
                        document.getElementById('diverrormessage').style.display = 'none';

                        document.getElementById('divdetail').style.display = 'block';
                        document.getElementById('lblname').innerHTML = 'Name : ' + result[2];
                        document.getElementById('ElectricityAmount').value = result[3];
                        document.getElementById('lblbilldate').innerHTML = 'Bill Date : ' + result[4];
                        document.getElementById('lblduedate').innerHTML = 'Due Date : ' + result[5];



                        //document.getElementById('lblminvalue').in");
                WriteLiteral(@"nerHTML = result[2];
                        //document.getElementById('lblmaxvalue').innerHTML = result[3];
                    }
                    else {

                        //alert(result[0]);
                        //alert('error');
                        document.getElementById('divAmount').style.display = 'none';

                      
                        //document.getElementById('divminmaxvalue').style.display = 'none';
                        document.getElementById('diverrormessage').style.display = 'block';

                        document.getElementById('divdetail').style.display = 'none';


                        document.getElementById('btnrechargefetch').style.display = 'block';
                        document.getElementById('btnrecharge').style.display = 'none';

                        document.getElementById('lblerror').innerHTML = result[1];
                    }

                },
                beforeSend: function () {
                          ");
                WriteLiteral(@"                                                                          /*$(""#ddoperatormobile"").html('Loading...')*/;
                    $('#AjaxLoader').show();
                },
                complete: function () {
                    $('#AjaxLoader').hide();
                }
            })
        }

        function validateFastagRecharge() {
            if (document.getElementById(""vehicleNumber"").value == """") {
                toastr.warning('Warning', 'Enter Consumer No');
                document.getElementById(""vehicleNumber"").focus();
                return false;
            }
            else if ($('#ddoperatorelectricity').find("":selected"").val() == ""0"") {
                toastr.warning('Warning', 'Select Operator');
                document.getElementById(""ddoperatorelectricity"").focus();
                return false;
            }
            else if (document.getElementById(""ElectricityAmount"").value == """") {
                toastr.warning('Warning', 'Enter Amount");
                WriteLiteral(@"');
                document.getElementById(""ElectricityAmount"").focus();
                return false;
            }
            if (parseFloat(document.getElementById(""ElectricityAmount"").value) <= 0) {
                toastr.warning('Warning', 'Amount Must Be Greater Than 0');
                document.getElementById(""ElectricityAmount"").focus();
                return false;
            }

            else {

                //document.getElementById(""amountConfirm"").value = document.getElementById(""amountdth"").value;
                //document.getElementById(""operatorConfirm"").value = $('#ddoperatordth').find("":selected"").text();
                //document.getElementById(""mobileConfirm"").value = document.getElementById(""numberdth"").value;
                //document.getElementById(""customermobileConfirm"").value = document.getElementById(""mobileNumber"").value;


                document.getElementById(""amountConfirmuserdetail"").value = document.getElementById(""ElectricityAmount"").value;
 ");
                WriteLiteral(@"               document.getElementById(""operatoridConfirmuserdetail"").value = $('#ddoperatorelectricity').find("":selected"").val();
                document.getElementById(""mobileConfirmuserdetail"").value = document.getElementById(""vehicleNumber"").value;




                if (document.getElementById('optional1Type').value == 'textbox') {
                    document.getElementById(""optional1Confirm"").value = document.getElementById(""optional1"").value;

                }
                else if (document.getElementById('optional1Type').value == 'dropdown') {
                    document.getElementById(""optional1Confirm"").value = $('#ddoptional1').find("":selected"").text();
                }
                else {
                    document.getElementById(""optional1Confirm"").value = '';
                }


                //document.getElementById(""mobileuserdetail"").value = document.getElementById(""mobileNumber"").value;
                document.getElementById(""headeruserdetail"").innerHTML ");
                WriteLiteral(@"= document.getElementById(""vehicleNumber"").value + ' - <i class=""fa fa-inr""></i>' + document.getElementById(""ElectricityAmount"").value

                document.getElementById('recharge').style.display = 'none';
                document.getElementById('userdetail').style.display = 'block';
            }
        }
        function validateRechargeconfirm2() {
            if (document.getElementById(""emailuserdetail"").value == """") {
                toastr.warning('Warning', 'Enter Email');
                document.getElementById(""emailuserdetail"").focus();
                return false;
            }
            else if (document.getElementById(""nameuserdetail"").value == """") {
                toastr.warning('Warning', 'Enter Name');
                document.getElementById(""nameuserdetail"").focus();
                return false;
            }
            else if (document.getElementById(""mobileuserdetail"").value == """") {
                toastr.warning('Warning', 'Enter Consumer No');
          ");
                WriteLiteral(@"      document.getElementById(""mobileuserdetail"").focus();
                return false;
            }
            if (document.getElementById('agreecheck').checked) {
                //alert(""checked"");
            } else {
                toastr.warning('Warning', 'Please Accept Terms and Conditions');
                return false;
                //document.getElementById(""nameuserdetail"").focus();
            }
            var validRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+");
                EndContext();
                BeginContext(28188, 930, true);
                WriteLiteral(@"@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/;
            if (document.getElementById(""emailuserdetail"").value.match(validRegex)) {
                //alert(""Valid email address!"");
                //document.form1.text1.focus();
                //document.getElementById(""emailuserdetail"").focus();
                //return true;
            } else {
                //alert(""Invalid email address!"");
                //document.form1.text1.focus();
                toastr.warning('Warning', 'Enter Valid Email');
                document.getElementById(""emailuserdetail"").focus();
                return false;
            }
        }

        function backuserdetail() {
            document.getElementById('recharge').style.display = 'block';
            document.getElementById('userdetail').style.display = 'none';
            document.getElementById('plan').style.display = 'none';
        }
   
    </script>
");
                EndContext();
            }
            );
            BeginContext(29121, 2, true);
            WriteLiteral("\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
